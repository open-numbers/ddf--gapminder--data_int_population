info:
    id: ddf--gapminder--population
    author:  semio<prairy.long@gmail.com> at Gapminder
    version: 0.1

# in this recipe:
# 1. bridged datapoints for country-year/global-year for UN WPP and Gapminder historic population
# 2. (country-year-age) and (country-year-gender-age) datapoints from UN WPP
# 3. calculate aggregated result for entitiy sets in Gapminder geo domain 

config:
    ddf_dir: /Users/semio/src/work/Gapminder/
    recipes_dir: ./

include:
    - ingredients.yml
    - preprocess.yml

cooking:
    entities:
        - procedure: serve
          ingredients:
              - gm-entities-geo
              - unpop-entities-age
              - unpop-entities-gender
    datapoints:
        # datapoints by country,age,year and country,age,gender,year.
        # no need to do bridge, take directly form un data

        ###############
        # 1. pop-by-age
        ###############
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-thousands
          options:
              column: country_code
              target_column: country_code
              dictionary:
                  base: unpop-entities-country_code-aligned
                  key: country_code
                  value: country
          result: unpop-datapoints-pop-by-age-aligned

        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-aligned
          options:
              dictionary:
                  country_code: country
          result: &dp1 unpop-datapoints-pop-by-age-country

        # global
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop_world-by-age-thousands
          options:
              column: country_code
              dictionary:
                  "900": world
          result: unpop-datapoints-pop_world-by-age-aligned

        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop_world-by-age-aligned
          options:
              dictionary:
                  country_code: global
          result: &dp1_0 unpop-datapoints-pop_world-by-age-final

        # aggregate to world_4region and other
        # w4r
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-country
          result: unpop-datapoints-pop-by-age-country-translated_w4r
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: world_4region
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-country-translated_w4r
          result: unpop-datapoints-pop-by-age-world_4region
          options:
              groupby: ['age', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-world_4region
          result: &dp1_1 unpop-datapoints-pop-by-age-world_4region_final
          options:
              dictionary:
                  country: world_4region
        # w6r
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-country
          result: unpop-datapoints-pop-by-age-country-translated_w6r
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: world_6region
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-country-translated_w6r
          result: unpop-datapoints-pop-by-age-world_6region
          options:
              groupby: ['age', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-world_6region
          result: &dp1_2 unpop-datapoints-pop-by-age-world_6region_final
          options:
              dictionary:
                  country: world_6region
        # income group
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-country
          result: unpop-datapoints-pop-by-age-country-translated_income
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: income_groups
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-country-translated_income
          result: unpop-datapoints-pop-by-age-income_group
          options:
              groupby: ['age', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-income_group
          result: &dp1_3 unpop-datapoints-pop-by-age-income_group_final
          options:
              dictionary:
                  country: income_groups
        # landlocked
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-country
          result: unpop-datapoints-pop-by-age-country-translated_landlocked
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: landlocked
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-country-translated_landlocked
          result: unpop-datapoints-pop-by-age-landlocked
          options:
              groupby: ['age', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-landlocked
          result: &dp1_4 unpop-datapoints-pop-by-age-landlocked_final
          options:
              dictionary:
                  country: landlocked
        # g77_and_oecd_countries
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-country
          result: unpop-datapoints-pop-by-age-country-translated_g77_and_oecd_countries
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: g77_and_oecd_countries
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-country-translated_g77_and_oecd_countries
          result: unpop-datapoints-pop-by-age-g77_and_oecd_countries
          options:
              groupby: ['age', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-g77_and_oecd_countries
          result: &dp1_5 unpop-datapoints-pop-by-age-g77_and_oecd_countries_final
          options:
              dictionary:
                  country: g77_and_oecd_countries
        # main_religion_2008
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-country
          result: unpop-datapoints-pop-by-age-country-translated_main_religion_2008
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: main_religion_2008
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-country-translated_main_religion_2008
          result: unpop-datapoints-pop-by-age-main_religion_2008
          options:
              groupby: ['age', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-main_religion_2008
          result: &dp1_6 unpop-datapoints-pop-by-age-main_religion_2008_final
          options:
              dictionary:
                  country: main_religion_2008

        ######################
        # 2. pop-by-age-gender
        ######################
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-gender-thousands
          options:
              column: country_code
              target_column: country_code
              dictionary:
                  base: unpop-entities-country_code-aligned
                  key: country_code
                  value: country
          result: unpop-datapoints-pop-by-age-gender-aligned

        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-gender-aligned
          options:
              dictionary:
                  country_code: country
          result: &dp2 unpop-datapoints-pop-by-age-gender-country

        # global
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop_world-by-age-gender-thousands
          options:
              column: country_code
              dictionary:
                  "900": world
          result: unpop-datapoints-pop_world-by-age-gender-aligned

        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop_world-by-age-gender-aligned
          options:
              dictionary:
                  country_code: global
          result: &dp2_0 unpop-datapoints-pop_world-by-age-gender-final

        # aggregate to world_4region and other
        # w4r
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country
          result: unpop-datapoints-pop-by-age-gender-country-translated_w4r
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: world_4region
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country-translated_w4r
          result: unpop-datapoints-pop-by-age-gender-world_4region
          options:
              groupby: ['age', 'gender', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-gender-world_4region
          result: &dp2_1 unpop-datapoints-pop-by-age-gender-world_4region_final
          options:
              dictionary:
                  country: world_4region
        # w6r
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country
          result: unpop-datapoints-pop-by-age-gender-country-translated_w6r
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: world_6region
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country-translated_w6r
          result: unpop-datapoints-pop-by-age-gender-world_6region
          options:
              groupby: ['age', 'gender', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-gender-world_6region
          result: &dp2_2 unpop-datapoints-pop-by-age-gender-world_6region_final
          options:
              dictionary:
                  country: world_6region
        # income group
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country
          result: unpop-datapoints-pop-by-age-gender-country-translated_income
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: income_groups
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country-translated_income
          result: unpop-datapoints-pop-by-age-gender-income_group
          options:
              groupby: ['age', 'gender', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-gender-income_group
          result: &dp2_3 unpop-datapoints-pop-by-age-gender-income_group_final
          options:
              dictionary:
                  country: income_groups
        # landlocked
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country
          result: unpop-datapoints-pop-by-age-gender-country-translated_landlocked
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: landlocked
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country-translated_landlocked
          result: unpop-datapoints-pop-by-age-gender-landlocked
          options:
              groupby: ['age', 'gender', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-gender-landlocked
          result: &dp2_4 unpop-datapoints-pop-by-age-gender-landlocked_final
          options:
              dictionary:
                  country: landlocked
        # g77_and_oecd_countries
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country
          result: unpop-datapoints-pop-by-age-gender-country-translated_g77_and_oecd_countries
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: g77_and_oecd_countries
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country-translated_g77_and_oecd_countries
          result: unpop-datapoints-pop-by-age-gender-g77_and_oecd_countries
          options:
              groupby: ['age', 'gender', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-gender-g77_and_oecd_countries
          result: &dp2_5 unpop-datapoints-pop-by-age-gender-g77_and_oecd_countries_final
          options:
              dictionary:
                  country: g77_and_oecd_countries
        # main_religion_2008
        - procedure: translate_column
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country
          result: unpop-datapoints-pop-by-age-gender-country-translated_main_religion_2008
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: main_religion_2008
        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-gender-country-translated_main_religion_2008
          result: unpop-datapoints-pop-by-age-gender-main_religion_2008
          options:
              groupby: ['age', 'gender', 'country', 'year']
              aggregate:
                  population: sum
        - procedure: translate_header
          ingredients:
              - unpop-datapoints-pop-by-age-gender-main_religion_2008
          result: &dp2_6 unpop-datapoints-pop-by-age-gender-main_religion_2008_final
          options:
              dictionary:
                  country: main_religion_2008

        #          
        # below we will add bridged datapoints
        #

        ########################
        # 3. pop by country/year
        ########################
        - procedure: translate_column
          ingredients:
              - gmpop-datapoints-pop
          options:
              column: area
              dictionary:
                  base: gmpop-entities-area-aligned
                  key: area
                  value: country
          result: gmpop-datapoints-pop-aligned

        - procedure: translate_header
          ingredients:
              - gmpop-datapoints-pop-aligned
          options:
              dictionary:
                  area: country
                  total_population_with_interpolations: population
          result: gmpop-datapoints-pop-country

        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop-by-age-country
          options:
              groupby: ['country', 'year']
              aggregate:
                  population: sum
          result: unpop-datapoints-pop-country

        - procedure: trend_bridge
          ingredients:
              - gmpop-datapoints-pop-country
          options:
              bridge_start:
                  ingredient: gmpop-datapoints-pop-country
                  column: population
              bridge_end:
                  ingredient: unpop-datapoints-pop-country
                  column: population
              bridge_on: year
              bridge_length: 10
          result: &dp3 pop-country-bridged

        # for world_4region
        - procedure: translate_column
          ingredients:
              - *dp3
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: world_4region
          result: pop-datapoints-world_4region
        - procedure: translate_header
          ingredients:
              - pop-datapoints-world_4region
          options:
              dictionary:
                  country: world_4region
          result: pop-datapoints-world_4region-translated

        - procedure: groupby
          ingredients:
              - pop-datapoints-world_4region-translated
          options:
              groupby:
                  - world_4region
                  - year
              aggregate:
                  population: sum
          result: &dp3_1 pop-datapoints-by-world_4region
        # for world_6region
        - procedure: translate_column
          ingredients:
              - *dp3
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: world_6region
          result: pop-datapoints-world_6region
        - procedure: translate_header
          ingredients:
              - pop-datapoints-world_6region
          options:
              dictionary:
                  country: world_6region
          result: pop-datapoints-world_6region-translated

        - procedure: groupby
          ingredients:
              - pop-datapoints-world_6region-translated
          options:
              groupby:
                  - world_6region
                  - year
              aggregate:
                  population: sum
          result: &dp3_2 pop-datapoints-by-world_6region
        # for income_groups
        - procedure: translate_column
          ingredients:
              - *dp3
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: income_groups
          result: pop-datapoints-income_groups
        - procedure: translate_header
          ingredients:
              - pop-datapoints-income_groups
          options:
              dictionary:
                  country: income_groups
          result: pop-datapoints-income_groups-translated

        - procedure: groupby
          ingredients:
              - pop-datapoints-income_groups-translated
          options:
              groupby:
                  - income_groups
                  - year
              aggregate:
                  population: sum
          result: &dp3_3 pop-datapoints-by-income_groups
        # for landlocked
        - procedure: translate_column
          ingredients:
              - *dp3
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: landlocked
          result: pop-datapoints-landlocked
        - procedure: translate_header
          ingredients:
              - pop-datapoints-landlocked
          options:
              dictionary:
                  country: landlocked
          result: pop-datapoints-landlocked-translated

        - procedure: groupby
          ingredients:
              - pop-datapoints-landlocked-translated
          options:
              groupby:
                  - landlocked
                  - year
              aggregate:
                  population: sum
          result: &dp3_4 pop-datapoints-by-landlocked
        # for g77_and_oecd_countries
        - procedure: translate_column
          ingredients:
              - *dp3
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: g77_and_oecd_countries
          result: pop-datapoints-g77_and_oecd_countries
        - procedure: translate_header
          ingredients:
              - pop-datapoints-g77_and_oecd_countries
          options:
              dictionary:
                  country: g77_and_oecd_countries
          result: pop-datapoints-g77_and_oecd_countries-translated

        - procedure: groupby
          ingredients:
              - pop-datapoints-g77_and_oecd_countries-translated
          options:
              groupby:
                  - g77_and_oecd_countries
                  - year
              aggregate:
                  population: sum
          result: &dp3_5 pop-datapoints-by-g77_and_oecd_countries
        # for main_religion_2008
        - procedure: translate_column
          ingredients:
              - *dp3
          options:
              column: country
              dictionary:
                  base: gm-entities-country
                  key: country
                  value: main_religion_2008
          result: pop-datapoints-main_religion_2008
        - procedure: translate_header
          ingredients:
              - pop-datapoints-main_religion_2008
          options:
              dictionary:
                  country: main_religion_2008
          result: pop-datapoints-main_religion_2008-translated

        - procedure: groupby
          ingredients:
              - pop-datapoints-main_religion_2008-translated
          options:
              groupby:
                  - main_religion_2008
                  - year
              aggregate:
                  population: sum
          result: &dp3_6 pop-datapoints-by-main_religion_2008

        # for global
        - procedure: groupby
          ingredients:
              - gmpop-datapoints-pop-country
          options:
              groupby: ['year']
              aggregate:
                  population: sum
              insert_key:
                  global: world
          result: gmpop-datapoints-pop_world

        - procedure: groupby
          ingredients:
              - unpop-datapoints-pop_world-by-age-thousands
          options:
              groupby: ['year']
              aggregate:
                  population: sum
              insert_key:
                  global: world
          result: unpop-datapoints-pop_world

        - procedure: trend_bridge
          ingredients:
              - unpop-datapoints-pop_world
          options:
              bridge_start:
                  ingredient: gmpop-datapoints-pop_world
                  column: population
              bridge_end:
                  ingredient: unpop-datapoints-pop_world
                  column: population
              bridge_on: year
              bridge_length: 10
          result: &dp4 pop-world-bridged

        - procedure: serve
          ingredients:
              - *dp1
          options:
              sub_folder: ddf--datapoints--population--by--country--age--year
              split_datapoints_by:
                  - country

        - procedure: serve
          ingredients:
              - *dp2
          options:
              sub_folder: ddf--datapoints--population--by--country--age--gender--year
              split_datapoints_by:
                  - country
        - procedure: serve
          ingredients:
              - *dp1_0
              - *dp1_1
              - *dp1_2
              - *dp1_3
              - *dp1_4
              - *dp1_5
              - *dp1_6
              - *dp2_0
              - *dp2_1
              - *dp2_2
              - *dp2_3
              - *dp2_4
              - *dp2_5
              - *dp2_6
              - *dp3
              - *dp3_1
              - *dp3_2
              - *dp3_3
              - *dp3_4
              - *dp3_5
              - *dp3_6
              - *dp4
    concepts:
        - procedure: extract_concepts
          ingredients:
              - *dp2
          options:
              include_keys: true
              overwrite:
                  year: time
                  age: entity_domain
                  gender: entity_domain
          result: extracted_concepts
        - procedure: merge
          ingredients:
              - extracted_concepts
              - gm-concepts-geo
          options:
              deep: true
          result: concepts_final
        - procedure: serve
          ingredients:
              - concepts_final
